<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ff28f37b-87e2-47ac-a5f3-83f889770241" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/Column.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/Column.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin File" />
        <option value="Kotlin Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2mw1Q9NR6b1KJkVVCDi0oVIBxNg" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.Build checkers.executor": "Run",
    "Gradle.TestColumn.Build a Column by index and check the properties.executor": "Run",
    "JUnit.TestColumn.Build a Column by index and check the properties.executor": "Run",
    "JUnit.TestColumn.Build a Column with invalid index throws exception.executor": "Run",
    "JUnit.TestColumn.Column must be a value class.executor": "Run",
    "JUnit.TestColumn.Symbol to Column conversion with check.executor": "Run",
    "JUnit.TestColumn.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "column",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/Users/tiagonevoa/IdeaProjects/TDS/checkers/src/main/kotlin/Main.kt",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2045977",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="K2MoveDeclarationsDialog.RECENT_PACKAGE_KEY">
      <recent name="isel.leic.tds.checkers.model" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.TestColumn">
    <configuration name="TestColumn" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="checkers.test" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TestColumn" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestColumn.Build a Column by index and check the properties" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="checkers.test" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TestColumn" />
      <option name="METHOD_NAME" value="Build a Column by index and check the properties" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestColumn.Build a Column with invalid index throws exception" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="checkers.test" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TestColumn" />
      <option name="METHOD_NAME" value="Build a Column with invalid index throws exception" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestColumn.Column must be a value class" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="checkers.test" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TestColumn" />
      <option name="METHOD_NAME" value="Column must be a value class" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestColumn.Symbol to Column conversion with check" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="checkers.test" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TestColumn" />
      <option name="METHOD_NAME" value="Symbol to Column conversion with check" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.TestColumn" />
        <item itemvalue="JUnit.TestColumn.Symbol to Column conversion with check" />
        <item itemvalue="JUnit.TestColumn.Build a Column by index and check the properties" />
        <item itemvalue="JUnit.TestColumn.Column must be a value class" />
        <item itemvalue="JUnit.TestColumn.Build a Column with invalid index throws exception" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ff28f37b-87e2-47ac-a5f3-83f889770241" name="Changes" comment="" />
      <created>1727972805495</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1727972805495</updated>
      <workItem from="1727972806573" duration="330000" />
      <workItem from="1727979325785" duration="1201000" />
      <workItem from="1728034144013" duration="2455000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/Main.kt</url>
          <line>13</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>